@page "/register"
<h3>Register</h3>
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons
@using global::Shared.DTO
@using System.Net
@using FrontEnd.Utils
@inject NavigationManager Nav
@inject ApiClient HttpClient

<ErrorMessage Message="@ErrorMessage"></ErrorMessage>

<form @onsubmit="PostRegister">
    <SfTextBox Placeholder="Login" @bind-Value="Login"></SfTextBox><br>
    <SfTextBox Placeholder="Password" Type="InputType.Password" @bind-Value="Password"></SfTextBox><br>
    <SfTextBox Placeholder="Repeat Password" Type="InputType.Password" @bind-Value="PasswordRepeat"></SfTextBox><br>
    <SfTextBox Placeholder="Email" @bind-Value="Email"></SfTextBox><br>
    <SfButton @onclick="PostRegister">Register</SfButton><SfButton @onclick="GoToLogin">Cancel</SfButton>
</form>
<style>
    form > * {
        margin-top: 5px;
    }
</style>

@code {
    private string? Login { get; set; }
    private string? Password { get; set; }
    private string? PasswordRepeat { get; set; }
    private string? Email { get; set; }
    
    private string? ErrorMessage { get; set; }
    
    private void GoToLogin()
    {
        Nav.NavigateTo("/login");
    }

    private async Task PostRegister()
    {
        ErrorMessage = null;
        
        if (!ValidateForm())
        {
            return;
        }
        
        var registerData = new RegisterDataDTO()
        {
            Login = Login,
            Password = Password,
            Email = Email
        };
        var result = await HttpClient.PostAsJsonAsync("/api/register", registerData);


        if (!result.IsSuccessStatusCode)
        {
            if (result.StatusCode == HttpStatusCode.InternalServerError)
            {
                ErrorMessage = await result.Content.ReadAsStringAsync();
            }
            if (ErrorMessage == null || ErrorMessage.Trim().Length == 0)
            {
                ErrorMessage = result.ReasonPhrase;
            }
            return;
        }

        GoToLogin();
    }

    private bool ValidateForm()
    {
        if (Login == null || Password == null || PasswordRepeat == null || Email == null)
        {
            ErrorMessage = "You need to pass login and password!";
            return false;
        }

        if (!(5 <= Login.Length && Login.Length <= 64))
        {
            ErrorMessage = "Incorrect login!";
            return false;
        }
        
        
        if (!(5 <= Login.Length && Login.Length <= 64))
        {
            ErrorMessage = "Incorrect password!";
            return false;
        }

        if (Password != PasswordRepeat)
        {
            ErrorMessage = "Passwords don't match!";
            return false;
        }

        return true;
    }

}