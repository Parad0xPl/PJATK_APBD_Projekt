@page "/watchlist"
<h3>Watchlist</h3>
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using FrontEnd.Utils
@inject ApiClient _httpClient

<SfGrid DataSource="@DetailsList">
    <GridColumns>
        <GridColumn Field="Logo"></GridColumn>
        <GridColumn Field="Symbol"></GridColumn>
        <GridColumn Field="Name"></GridColumn>
        <GridColumn Field="Type"></GridColumn>
        <GridColumn Field="Marker"></GridColumn>
        <GridColumn Field="Options"></GridColumn>
    </GridColumns>
    <GridTemplates>
        <RowTemplate>
            @{
                var WatchlistElement = (context as WatchlistData);
            }
            <td>
                <img src="@WatchlistElement.ImageURL"/>
            </td>
            <td>
                @WatchlistElement.Symbol
            </td>
            <td>
                @WatchlistElement.Name
            </td>
            <td>
                @WatchlistElement.Type
            </td>
            <td>
                @WatchlistElement.Marker
            </td>
            <td>
                <SfButton @onclick="() => RemoveWatchlist(WatchlistElement.Symbol)">Remove</SfButton>
            </td>
        </RowTemplate>
    </GridTemplates>
</SfGrid>

@code {
    private List<WatchlistData> DetailsList { get; set; } = null!;
 
    protected override async Task OnInitializedAsync()
    {
        var watchlist = await _httpClient.GetWatchlist();
        if (watchlist == null)
        {
            //TODO Handle error
            return;
        }
        DetailsList = watchlist;
    }

    private async Task RemoveWatchlist(string watchlistElementName)
    {
        var removeFromWatchlist = await _httpClient.RemoveFromWatchlist(watchlistElementName);
        if (removeFromWatchlist)
        {
            DetailsList = DetailsList.Where(e => e.Symbol != watchlistElementName).ToList();
        }
    }

}